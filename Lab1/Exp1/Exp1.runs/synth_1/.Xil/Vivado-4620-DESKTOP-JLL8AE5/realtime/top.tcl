# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/Exp1.runs/synth_1/.Xil/Vivado-4620-DESKTOP-JLL8AE5/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7k325tffg676-2L
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    # Skipping read_* RTL commands because this is post-elab optimize flow
    set rt::useElabCache true
    if {$rt::useElabCache == false} {
      rt::read_verilog -include {{C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary}} {
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/ALU.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/CPUTEST.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/Code2Inst.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/CtrlUnit.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/Font816.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/HazardDetectionUnit.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/ImmGen.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/common/MUX2T1_32.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/common/MUX4T1_32.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/RAM_B.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/common/REG32.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/REG_EX_MEM.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/REG_ID_EX.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/REG_IF_ID.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/REG_MEM_WB.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/ROM_D.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/RV32core.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/core/Regs.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/VGATEST.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/common/add_32.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/btn_scan.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/clk_diff.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/common/cmp_32.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/debug_clk.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/display.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/my_clk_gen.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/parallel2serial.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/vga.v}
      {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/code/auxillary/top.v}
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification true
    set rt::SDCFileList {{C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/Exp1.runs/synth_1/.Xil/Vivado-4620-DESKTOP-JLL8AE5/realtime/top_synth.xdc}}
    rt::sdcChecksum
    set rt::top top
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter dataflowBusHighlighting false
    rt::set_parameter generateDataflowBusNetlist false
    rt::set_parameter dataFlowViewInElab false
    rt::set_parameter busViewFixBrokenConnections false
    rt::set_parameter elaborateRtlOnlyFlow false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter ramStyle auto
    rt::set_parameter merge_flipflops true
# MODE: 
    rt::set_parameter webTalkPath {C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/Exp1.cache/wt}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "C:/Users/12656/Desktop/Computer Arch/Lab1/Exp1/Exp1.runs/synth_1/.Xil/Vivado-4620-DESKTOP-JLL8AE5/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    rt::close_pss_mem_watcher
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    rt::set_parameter incrementalOnCache ""
    rt::set_parameter doIncremental false
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
